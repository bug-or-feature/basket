
plugins {
    id "org.sonarqube" version "1.2"
}

group = 'net.bugorfeature'
version = '1.0.0'

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8

apply plugin: 'maven'
apply plugin: 'groovy'
apply plugin: 'jacoco'

repositories {
    jcenter()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'cglib:cglib-nodep:3.2.2'
    compile 'org.springframework.boot:spring-boot-starter:1.3.2.RELEASE'
    compile ('org.springframework.boot:spring-boot-cli:1.3.2.RELEASE') {
        exclude group: 'org.apache.maven'
        exclude group: 'org.eclipse.aether'
        exclude group: 'org.codehaus.plexus'
    }

    testCompile 'junit:junit:4.12'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'com.github.stefanbirkner:system-rules:1.16.0'
    testCompile "org.mockito:mockito-core:2.0.50-beta"
}

jar {
    manifest {
        attributes (
            'Main-Class': 'net.bugorfeature.basket.SpringCommandLineApplication'
        )
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacoco {
    toolVersion = "0.7.5.201505241946"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

task jacocoReport(type: JacocoReport) {
    sourceSets sourceSets.main
    executionData test
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

check.dependsOn tasks.jacocoReport
